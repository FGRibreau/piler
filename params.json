{"name":"Piler","body":"# Piler\r\n\r\nFeature hilights\r\n\r\n  * Minify and concatenate JS and CSS for fast page loads\r\n  * Tag rendering\r\n  * Namespaces\r\n  * Transparent preprocessors\r\n  * Push CSS changes to the browser using Socket.IO\r\n  * Easy code sharing with server\r\n\r\n## Awesome Asset Manager for Node.js\r\n\r\n*Piler* allows you to manage all your JavaScript and CSS assets cleanly and\r\ndirectly from code. It will concatenate and minify them in production and it\r\ntakes care of rendering the tags. The idea is to make your pages load as\r\nquickly as possible.\r\n\r\nSo why create a yet another asset manager? Because Node.js is special. In\r\nNode.js a JavaScript asset isn't just a pile of bits that are sent to the\r\nbrowser. It's code. It's code that can be also used in the server and I think\r\nthat it's the job of asset managers to help with it. So in *Piler* you can take\r\ncode directly from your Javascript objects, not just from JavaScript files.\r\nCopying things from Rails is just not enough. This is just a one reason why\r\n*Piler* was created.\r\n\r\n*Piler* is written following principles in mind:\r\n\r\n  * Creating best possible production setup for assets should be as easy as\r\n    including script/link to a page.\r\n  * Namespaces. You don't want to serve huge blob of admin view code for all\r\n    anonymous users.\r\n  * Support any JS- or CSS-files. No need to create special structure for your\r\n    assets. Just include your jQueries or whatever.\r\n  * Preprocessor languages are first class citizens. Eg. Just change the file\r\n    extension to .coffee to use CoffeeScript. That's it. No need to worry about\r\n    compiled files.\r\n  * Use heavy caching. Browser caches are killed automatically using the hash\r\n    sum of the assets.\r\n  * Awesome development mode. Build-in support for pushing CSS changes to\r\n    browsr using Socket.IO.\r\n\r\n\r\n\r\n\r\n","tagline":"Awesome Asset Manager for Node.js","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}